package com.adobe.aem.guides.wknd.core.components.impl;

import java.util.Collections;
import java.util.List;

import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.models.annotations.Model;
import org.apache.sling.models.annotations.injectorspecific.ValueMapValue;
import org.apache.sling.models.annotations.DefaultInjectionStrategy;

import com.adobe.aem.guides.wknd.core.components.Byline;

@Model(
		// The adaptables parameter specifies that this model can be adapted by the
		// request.
		adaptables = { SlingHttpServletRequest.class },
		// The adapters parameter allows the implementation class to be registered under
		// the Byline interface. This allows the HTL script to call the Sling Model via
		// the interface
		adapters = { Byline.class },
		// The resourceType points to the Byline component resource type (created
		// earlier) and helps to resolve the correct model if there are multiple
		// implementations.
		resourceType = { BylineImpl.RESOURCE_TYPE }, defaultInjectionStrategy = DefaultInjectionStrategy.OPTIONAL)
public class BylineImpl implements Byline {

	protected static final String RESOURCE_TYPE = "wknd/components/content/byline";

	@ValueMapValue
	private String name;

	@ValueMapValue
	private List<String> occupations;

	@Override
	public String getName() {
		return name;
	}

	@Override
	public List<String> getOccupations() {
		if (occupations != null) {
			Collections.sort(occupations);
			return occupations;
		} else {
			return Collections.emptyList();
		}
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}
}